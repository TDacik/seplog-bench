# Utilities for solvers' tool infos
#
# Author: Tomas Dacik (idacik@fit.vut.cz), 2023

import os
import yaml

from enum import Enum


class Status(Enum):
    SAT = 1
    UNSAT = 2
    UNKNOWN = 3

    @classmethod
    def of_string(cls, string):
        if string == "sat":
            return Status.SAT
        if string == "unsat":
            return Status.UNSAT
        if string == "unknown":
            return Status.UNKNOWN

        assert False

    def is_sat(self):
        return self == Status.SAT

    def is_unsat(self):
        return self == Status.UNSAT

    def is_answer(self):
        return self.is_sat() or self.is_unsat()

    def is_unknown(self):
        return self == Status.UNKNOWN


def load_config(path):
    with open(path, "r") as stream:
        return yaml.safe_load(stream)


def load_option(config, option, default):
    try:
        return config[option]
    except KeyError:
        return default


def find_status(output):
    """
    Find status in output. The function expects that solve returns one of 'sat', 'unsat'
    or 'unknown' at one of the lines of the output.
    """
    for line in output:
        if line in ["sat", "unsat"]:
            return Status.of_string(line)
        if line.startswith("unknown"):
            return Status.UNKNOWN

    assert None


def expected_status(tool, run):
    """
    Find expected status. If the input was generated by astral-convertor, the status is written
    on a line 'C' status: 'status', where 'C' is the comment directive used by the tool.
    """
    input_file = run.cmdline[-1]
    cwd = tool.working_directory(None)
    path = os.path.normpath(os.path.join(cwd, input_file))

    with open(path, "r") as f:
        for line in f.readlines():
            if "status: sat" in line or ":status sat" in line:
                return Status.SAT
            if "status: unsat" in line or ":status unsat" in line:
                return Status.UNSAT
            if "status: unknown" in line or ":status unknown" in line:
                return Status.UNKNOWN

        return None
