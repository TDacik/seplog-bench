//status: sat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x2 : Node, x3 : Node, x4 : Node, x5 : Node, x6 : Node, x7 : Node, x8 : Node, x10 : Node, x11 : Node, x12 : Node)
	requires ((((((null == null) &*& (x3 != x7)) &*& (x7 != x12)) &*& (x2 != x6)) &*& (x2 != x5)) &*& ((((((((lseg (x10, x11)) &*& (lseg (x7, x11))) &*& (lseg (x3, x11))) &*& (lseg (x4, x12))) &*& (lseg (x4, x7))) &*& (lseg (x11, x5))) &*& (lseg (x6, x10))) &*& (lseg (x6, x8))))
	ensures false
{}
