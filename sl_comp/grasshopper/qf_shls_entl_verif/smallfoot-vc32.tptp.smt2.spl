//status: sat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x1 : Node, x2 : Node, x3 : Node, x4 : Node, x5 : Node)
	requires ((((((((null == null) &*& (null != x1)) &*& (null != x2)) &*& (null != x3)) &*& (null != x4)) &*& (x2 != x3)) &*& (x2 != x4)) &*& ((lseg (x1, x4)) &*& (x4.next |-> x1)))
	ensures ((lseg (x5, x4)) &*& (x4.next |-> x5))
{}
