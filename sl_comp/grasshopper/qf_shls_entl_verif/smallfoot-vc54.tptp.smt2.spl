//status: sat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x1 : Node, x2 : Node, x3 : Node)
	requires ((((null == null) &*& (null != x1)) &*& (x1 != x2)) &*& (lseg (x3, null)))
	ensures ((x3 == x3) &*& (null == null))
{}
