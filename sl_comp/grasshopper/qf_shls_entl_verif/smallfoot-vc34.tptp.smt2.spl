//status: unsat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x1 : Node, x2 : Node, x3 : Node, x4 : Node)
	requires ((((((((((null == null) &*& (null != x1)) &*& (null != x2)) &*& (null != x3)) &*& (x1 != x2)) &*& (x1 != x4)) &*& (x1 != x3)) &*& (x2 != x4)) &*& (x3 != x4)) &*& (((lseg (x2, x3)) &*& (lseg (x4, null))) &*& (x3.next |-> x4)))
	ensures (((lseg (x4, null)) &*& (x3.next |-> x4)) &*& (lseg (x2, x3)))
{}
