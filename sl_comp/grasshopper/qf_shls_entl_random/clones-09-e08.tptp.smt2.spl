//status: sat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x1 : Node, x2 : Node, x3 : Node, x4 : Node, x5 : Node, x6 : Node, x7 : Node, x8 : Node, x9 : Node, x10 : Node, x11 : Node, x12 : Node, x13 : Node, x14 : Node, x15 : Node, x16 : Node, x17 : Node, x18 : Node, x19 : Node, x20 : Node, x21 : Node, x22 : Node, x23 : Node, x24 : Node, x25 : Node, x26 : Node, x27 : Node, x28 : Node, x29 : Node, x30 : Node, x31 : Node, x32 : Node, x33 : Node, x34 : Node, x35 : Node, x36 : Node)
	requires (((((((((((((((((((((((((((((((((((((((((((((((null == null) &*& (null != x1)) &*& (null != x2)) &*& (null != x3)) &*& (x1 != x3)) &*& (x2 != x3)) &*& (null != x5)) &*& (null != x6)) &*& (null != x7)) &*& (x5 != x7)) &*& (x6 != x7)) &*& (null != x9)) &*& (null != x10)) &*& (null != x11)) &*& (x9 != x11)) &*& (x10 != x11)) &*& (null != x13)) &*& (null != x14)) &*& (null != x15)) &*& (x13 != x15)) &*& (x14 != x15)) &*& (null != x17)) &*& (null != x18)) &*& (null != x19)) &*& (x17 != x19)) &*& (x18 != x19)) &*& (null != x21)) &*& (null != x22)) &*& (null != x23)) &*& (x21 != x23)) &*& (x22 != x23)) &*& (null != x25)) &*& (null != x26)) &*& (null != x27)) &*& (x25 != x27)) &*& (x26 != x27)) &*& (null != x29)) &*& (null != x30)) &*& (null != x31)) &*& (x29 != x31)) &*& (x30 != x31)) &*& (null != x33)) &*& (null != x34)) &*& (null != x35)) &*& (x33 != x35)) &*& (x34 != x35)) &*& (((((((((((((((((((((((((((lseg (x34, x33)) &*& (x35.next |-> x34)) &*& (x33.next |-> x35)) &*& (lseg (x30, x29))) &*& (x31.next |-> x30)) &*& (x29.next |-> x31)) &*& (lseg (x26, x25))) &*& (x27.next |-> x26)) &*& (x25.next |-> x27)) &*& (lseg (x22, x21))) &*& (x23.next |-> x22)) &*& (x21.next |-> x23)) &*& (lseg (x18, x17))) &*& (x19.next |-> x18)) &*& (x17.next |-> x19)) &*& (lseg (x14, x13))) &*& (x15.next |-> x14)) &*& (x13.next |-> x15)) &*& (lseg (x10, x9))) &*& (x11.next |-> x10)) &*& (x9.next |-> x11)) &*& (lseg (x6, x5))) &*& (x7.next |-> x6)) &*& (x5.next |-> x7)) &*& (lseg (x2, x1))) &*& (x3.next |-> x2)) &*& (x1.next |-> x3)))
	ensures (((((((((((((((((((((((((((x36.next |-> x35) &*& (lseg (x34, x36))) &*& (x35.next |-> x34)) &*& (x32.next |-> x31)) &*& (lseg (x30, x32))) &*& (x31.next |-> x30)) &*& (x28.next |-> x27)) &*& (lseg (x26, x28))) &*& (x27.next |-> x26)) &*& (x24.next |-> x23)) &*& (lseg (x22, x24))) &*& (x23.next |-> x22)) &*& (x20.next |-> x19)) &*& (lseg (x18, x20))) &*& (x19.next |-> x18)) &*& (x16.next |-> x15)) &*& (lseg (x14, x16))) &*& (x15.next |-> x14)) &*& (x12.next |-> x11)) &*& (lseg (x10, x12))) &*& (x11.next |-> x10)) &*& (x8.next |-> x7)) &*& (lseg (x6, x8))) &*& (x7.next |-> x6)) &*& (x4.next |-> x3)) &*& (lseg (x2, x4))) &*& (x3.next |-> x2))
{}
