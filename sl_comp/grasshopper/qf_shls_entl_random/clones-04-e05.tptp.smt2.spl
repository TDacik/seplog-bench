//status: unsat

// Generated by Astral

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  acc({ z: Node :: Btwn(next, x, z, y) && z != y }) &*& Reach(next, x, y)
}


procedure formula(x1 : Node, x2 : Node, x3 : Node, x4 : Node, x5 : Node, x6 : Node, x7 : Node, x8 : Node)
	requires ((((((null == null) &*& (null != x1)) &*& (null != x3)) &*& (null != x5)) &*& (null != x7)) &*& ((((x7.next |-> x8) &*& (x5.next |-> x6)) &*& (x3.next |-> x4)) &*& (x1.next |-> x2)))
	ensures ((((x7.next |-> x8) &*& (x5.next |-> x6)) &*& (x3.next |-> x4)) &*& (x1.next |-> x2))
{}
