(set-info :source Astral)
(set-info :status unsat)

(declare-sort Loc 0)
(declare-heap (Loc Loc))

(declare-const x1 Loc)
(declare-const x2 Loc)
(declare-const x3 Loc)
(declare-const x4 Loc)
(declare-const x5 Loc)
(declare-const x6 Loc)
(declare-const x7 Loc)
(declare-const x8 Loc)
(declare-const x9 Loc)
(declare-const x10 Loc)
(declare-const x11 Loc)
(declare-const x12 Loc)
(declare-const x13 Loc)
(declare-const x14 Loc)
(declare-const x15 Loc)
(declare-const x16 Loc)
(declare-const x17 Loc)
(declare-const x18 Loc)
(declare-const x19 Loc)
(declare-const x20 Loc)

(assert
  (sep
    (pto x1 x2)
    (pto x2 x3)
    (pto x3 x4)
    (pto x4 x5)
    (pto x5 x6)
    (pto x6 x7)
    (pto x7 x8)
    (pto x8 x9)
    (pto x9 x10)
    (pto x10 x11)
    (pto x11 x12)
    (pto x12 x13)
    (pto x13 x14)
    (pto x14 x15)
    (pto x15 x16)
    (pto x16 x17)
    (pto x17 x18)
    (pto x18 x19)
    (pto x19 x20)
    (pto x20 x1)
  )
)

(assert (not (wand (pto x1 (as sep.nil Loc)) false)))
(assert (not (wand (pto x2 (as sep.nil Loc)) false)))
(assert (not (wand (pto x3 (as sep.nil Loc)) false)))
(assert (not (wand (pto x4 (as sep.nil Loc)) false)))
(assert (not (wand (pto x5 (as sep.nil Loc)) false)))
(assert (not (wand (pto x6 (as sep.nil Loc)) false)))
(assert (not (wand (pto x7 (as sep.nil Loc)) false)))
(assert (not (wand (pto x8 (as sep.nil Loc)) false)))
(assert (not (wand (pto x9 (as sep.nil Loc)) false)))
(assert (not (wand (pto x10 (as sep.nil Loc)) false)))
(assert (not (wand (pto x11 (as sep.nil Loc)) false)))
(assert (not (wand (pto x12 (as sep.nil Loc)) false)))
(assert (not (wand (pto x13 (as sep.nil Loc)) false)))
(assert (not (wand (pto x14 (as sep.nil Loc)) false)))
(assert (not (wand (pto x15 (as sep.nil Loc)) false)))
(assert (not (wand (pto x16 (as sep.nil Loc)) false)))
(assert (not (wand (pto x17 (as sep.nil Loc)) false)))
(assert (not (wand (pto x18 (as sep.nil Loc)) false)))
(assert (not (wand (pto x19 (as sep.nil Loc)) false)))
(assert (not (wand (pto x20 (as sep.nil Loc)) false)))

(check-sat)