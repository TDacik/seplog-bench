(set-info :source Astral)
(set-info :status unsat)

(declare-sort Loc 0)
(declare-heap (Loc Loc))

(declare-const x1 Loc)
(declare-const x2 Loc)
(declare-const x3 Loc)
(declare-const x4 Loc)
(declare-const x5 Loc)
(declare-const x6 Loc)
(declare-const x7 Loc)
(declare-const x8 Loc)
(declare-const x9 Loc)
(declare-const x10 Loc)
(declare-const x11 Loc)
(declare-const x12 Loc)
(declare-const x13 Loc)
(declare-const x14 Loc)
(declare-const x15 Loc)
(declare-const x16 Loc)
(declare-const x17 Loc)
(declare-const x18 Loc)
(declare-const x19 Loc)
(declare-const x20 Loc)
(declare-const x21 Loc)
(declare-const x22 Loc)
(declare-const x23 Loc)
(declare-const x24 Loc)
(declare-const x25 Loc)
(declare-const x26 Loc)
(declare-const x27 Loc)
(declare-const x28 Loc)
(declare-const x29 Loc)
(declare-const x30 Loc)
(declare-const x31 Loc)
(declare-const x32 Loc)
(declare-const x33 Loc)
(declare-const x34 Loc)
(declare-const x35 Loc)
(declare-const x36 Loc)
(declare-const x37 Loc)
(declare-const x38 Loc)
(declare-const x39 Loc)
(declare-const x40 Loc)
(declare-const x41 Loc)
(declare-const x42 Loc)
(declare-const x43 Loc)
(declare-const x44 Loc)
(declare-const x45 Loc)
(declare-const x46 Loc)
(declare-const x47 Loc)
(declare-const x48 Loc)
(declare-const x49 Loc)
(declare-const x50 Loc)
(declare-const x51 Loc)
(declare-const x52 Loc)
(declare-const x53 Loc)
(declare-const x54 Loc)

(assert
  (sep
    (pto x1 x2)
    (pto x2 x3)
    (pto x3 x4)
    (pto x4 x5)
    (pto x5 x6)
    (pto x6 x7)
    (pto x7 x8)
    (pto x8 x9)
    (pto x9 x10)
    (pto x10 x11)
    (pto x11 x12)
    (pto x12 x13)
    (pto x13 x14)
    (pto x14 x15)
    (pto x15 x16)
    (pto x16 x17)
    (pto x17 x18)
    (pto x18 x19)
    (pto x19 x20)
    (pto x20 x21)
    (pto x21 x22)
    (pto x22 x23)
    (pto x23 x24)
    (pto x24 x25)
    (pto x25 x26)
    (pto x26 x27)
    (pto x27 x28)
    (pto x28 x29)
    (pto x29 x30)
    (pto x30 x31)
    (pto x31 x32)
    (pto x32 x33)
    (pto x33 x34)
    (pto x34 x35)
    (pto x35 x36)
    (pto x36 x37)
    (pto x37 x38)
    (pto x38 x39)
    (pto x39 x40)
    (pto x40 x41)
    (pto x41 x42)
    (pto x42 x43)
    (pto x43 x44)
    (pto x44 x45)
    (pto x45 x46)
    (pto x46 x47)
    (pto x47 x48)
    (pto x48 x49)
    (pto x49 x50)
    (pto x50 x51)
    (pto x51 x52)
    (pto x52 x53)
    (pto x53 x54)
    (pto x54 x1)
  )
)

(assert (not (wand (pto x1 (as sep.nil Loc)) false)))
(assert (not (wand (pto x2 (as sep.nil Loc)) false)))
(assert (not (wand (pto x3 (as sep.nil Loc)) false)))
(assert (not (wand (pto x4 (as sep.nil Loc)) false)))
(assert (not (wand (pto x5 (as sep.nil Loc)) false)))
(assert (not (wand (pto x6 (as sep.nil Loc)) false)))
(assert (not (wand (pto x7 (as sep.nil Loc)) false)))
(assert (not (wand (pto x8 (as sep.nil Loc)) false)))
(assert (not (wand (pto x9 (as sep.nil Loc)) false)))
(assert (not (wand (pto x10 (as sep.nil Loc)) false)))
(assert (not (wand (pto x11 (as sep.nil Loc)) false)))
(assert (not (wand (pto x12 (as sep.nil Loc)) false)))
(assert (not (wand (pto x13 (as sep.nil Loc)) false)))
(assert (not (wand (pto x14 (as sep.nil Loc)) false)))
(assert (not (wand (pto x15 (as sep.nil Loc)) false)))
(assert (not (wand (pto x16 (as sep.nil Loc)) false)))
(assert (not (wand (pto x17 (as sep.nil Loc)) false)))
(assert (not (wand (pto x18 (as sep.nil Loc)) false)))
(assert (not (wand (pto x19 (as sep.nil Loc)) false)))
(assert (not (wand (pto x20 (as sep.nil Loc)) false)))
(assert (not (wand (pto x21 (as sep.nil Loc)) false)))
(assert (not (wand (pto x22 (as sep.nil Loc)) false)))
(assert (not (wand (pto x23 (as sep.nil Loc)) false)))
(assert (not (wand (pto x24 (as sep.nil Loc)) false)))
(assert (not (wand (pto x25 (as sep.nil Loc)) false)))
(assert (not (wand (pto x26 (as sep.nil Loc)) false)))
(assert (not (wand (pto x27 (as sep.nil Loc)) false)))
(assert (not (wand (pto x28 (as sep.nil Loc)) false)))
(assert (not (wand (pto x29 (as sep.nil Loc)) false)))
(assert (not (wand (pto x30 (as sep.nil Loc)) false)))
(assert (not (wand (pto x31 (as sep.nil Loc)) false)))
(assert (not (wand (pto x32 (as sep.nil Loc)) false)))
(assert (not (wand (pto x33 (as sep.nil Loc)) false)))
(assert (not (wand (pto x34 (as sep.nil Loc)) false)))
(assert (not (wand (pto x35 (as sep.nil Loc)) false)))
(assert (not (wand (pto x36 (as sep.nil Loc)) false)))
(assert (not (wand (pto x37 (as sep.nil Loc)) false)))
(assert (not (wand (pto x38 (as sep.nil Loc)) false)))
(assert (not (wand (pto x39 (as sep.nil Loc)) false)))
(assert (not (wand (pto x40 (as sep.nil Loc)) false)))
(assert (not (wand (pto x41 (as sep.nil Loc)) false)))
(assert (not (wand (pto x42 (as sep.nil Loc)) false)))
(assert (not (wand (pto x43 (as sep.nil Loc)) false)))
(assert (not (wand (pto x44 (as sep.nil Loc)) false)))
(assert (not (wand (pto x45 (as sep.nil Loc)) false)))
(assert (not (wand (pto x46 (as sep.nil Loc)) false)))
(assert (not (wand (pto x47 (as sep.nil Loc)) false)))
(assert (not (wand (pto x48 (as sep.nil Loc)) false)))
(assert (not (wand (pto x49 (as sep.nil Loc)) false)))
(assert (not (wand (pto x50 (as sep.nil Loc)) false)))
(assert (not (wand (pto x51 (as sep.nil Loc)) false)))
(assert (not (wand (pto x52 (as sep.nil Loc)) false)))
(assert (not (wand (pto x53 (as sep.nil Loc)) false)))
(assert (not (wand (pto x54 (as sep.nil Loc)) false)))

(check-sat)